generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  mobile    String    @unique
  createdAt DateTime  @default(now())
  address   Address?
  comments  Comment[]
  likes     Like[]
  posts     Post[]
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String?
  createdAt DateTime  @default(now())
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[]
  likes     Like[]
  tags      Tag[]
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  postId    String
  createdAt DateTime  @default(now())
  userId    String
  parentId  String?
  updatedAt DateTime  @updatedAt
  parent    Comment?  @relation("comment_children", fields: [parentId], references: [id])
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("comment_children")
}

model Address {
  id       String @id @default(uuid())
  suburb   String
  userId   String @unique
  country  String
  postCode String
  state    String
  user     User   @relation(fields: [userId], references: [id])
}

model Tag {
  id    String @id @default(uuid())
  title String @unique
  posts Post[]
}

model Like {
  userId String

  postId String

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
}
